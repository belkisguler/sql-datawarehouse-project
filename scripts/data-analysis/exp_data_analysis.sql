-- 1. Data Exploration
SELECT * FROM INFORMATION_SCHEMA.TABLES
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customer'

-- 2. Dimensions Exploration
-- identifying the unique values or categories in each dimension 
SELECT DISTINCT country FROM gold.dim_customer

SELECT DISTINCT category FROM gold.dim_products

-- 3.Date Exploration 
-- identify the earliest and latest dates (boundaries) 
-- understand the scope od fata and the timespan 
SELECT 
MIN(order_date) AS first_order_date,
MAX(order_date) AS last_order_date,
DATEDIFF(year,MIN(order_date),MAX(order_date)) AS order_range_year
FROM gold.fact_sales


SELECT
MIN(birthdate) AS oldest_customer,
MAX(birthdate) AS youngest_customer
FROM gold.dim_customer


-- 4. Measures Exploration 
-- Calculate the key metric of the business (Big Numbers) 
-- Find the total Sales
SELECT * FROM gold.fact_sales
SELECT SUM(sales_amount) FROM gold.fact_sales

-- Find how many items are sold 
SELECT SUM(quantity) FROM gold.fact_sales

-- Find the avg selling price 
SELECT AVG(price) FROM gold.fact_sales

-- Find the total number of orders 
SELECT COUNT(order_number) FROM gold.fact_sales

-- Find the total number of product 
SELECT COUNT(DISTINCT product_name) FROM gold.dim_products

-- Find the total number of customers 
SELECT * FROM gold.dim_customer
SELECT COUNT(customer_number) FROM gold.dim_customer

-- Find the total number of customers that has placed an order 
SELECT COUNT(DISTINCT customer_key) FROM gold.fact_sales

-- Generate Report that shows all key metrics of the business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity',  SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Price',  AVG(price) FROM gold.fact_sales
UNION ALL
SELECT 'Total Nr. Order',  COUNT(order_number) FROM gold.fact_sales
UNION ALL
SELECT 'Total Nr. Products',  COUNT(DISTINCT product_name) FROM gold.dim_products
UNION ALL 
SELECT 'Total Nr. Customers',  COUNT(customer_number) FROM gold.dim_customer



-- 5. Magnitude 
-- compare the measure values by categories
-- Find ttotal customers by countries
SELECT 
COUNTRY, 
COUNT(customer_key) AS total_customers
FROM gold.dim_customer
GROUP BY COUNTRY
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT 
gender, 
COUNT(customer_key) AS total_customers
FROM gold.dim_customer
GROUP BY gender
ORDER BY total_customers DESC

-- Find total products by category 
SELECT 
category,
COUNT(product_key) as total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

-- What is the avg costs in each category
SELECT 
AVG(cost) as average_cost,
category
FROM gold.dim_products
GROUP BY category
ORDER BY average_cost DESC

-- What is the total revenue generated for each category
SELECT 
p.category,
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key 
GROUP BY p.category 
ORDER BY total_revenue DESC

-- Find the total revenue is generated by the customer
SELECT 
p.customer_id,
p.first_name,
p.last_name,
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customer p
ON p.customer_key = f.customer_key 
GROUP BY
p.customer_id,
p.first_name,
p.last_name
ORDER BY total_revenue DESC

-- What is the distribution of sold items across countries
SELECT 
p.country,
SUM(f.quantity) AS total_sold_items
FROM gold.fact_sales f
LEFT JOIN gold.dim_customer p
ON p.customer_key = f.customer_key 
GROUP BY
p.country
ORDER BY total_sold_items DESC

-- 6. Ranking (Top N - Bottom N) 
-- Which 5 Products generate the highest revenue
SELECT TOP 5
p.product_name,
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key 
GROUP BY p.product_name
ORDER BY total_revenue DESC

SELECT TOP 5
p.product_name,
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key 
GROUP BY p.product_name

-- What are the 5 worst performing products in terms of sales?
SELECT * 
FROM (
	SELECT TOP 5
	p.product_name,
	SUM(f.sales_amount) AS total_revenue,
	ROW_NUMBER() OVER (ORDER BY SUM(f.sales_amount) DESC) AS rank_products
	FROM gold.fact_sales f
	LEFT JOIN gold.dim_products p
	ON p.product_key = f.product_key 
	GROUP BY p.product_name)t
WHERE rank_products <= 5


-- Find the top 10 customers who have generated the highest revenue 
SELECT TOP 10
p.customer_id,
p.first_name,
p.last_name,
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customer p
ON p.customer_key = f.customer_key 
GROUP BY
p.customer_id,
p.first_name,
p.last_name
ORDER BY total_revenue DESC
